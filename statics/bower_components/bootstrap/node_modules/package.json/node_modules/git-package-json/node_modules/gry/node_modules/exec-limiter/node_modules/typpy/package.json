{
  "name": "typpy",
  "version": "2.3.1",
  "description": "A better typeof for JavaScript.",
  "main": "lib/index.js",
  "directories": {
    "example": "example",
    "test": "test"
  },
  "scripts": {
    "test": "mocha test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:IonicaBizau/typpy.js.git"
  },
  "keywords": [
    "typeof",
    "javascript",
    "typpy"
  ],
  "author": {
    "name": "Ionică Bizău",
    "email": "bizauionica@gmail.com",
    "url": "http://ionicabizau.net"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/IonicaBizau/typpy.js/issues"
  },
  "homepage": "https://github.com/IonicaBizau/typpy.js",
  "blah": {
    "h_img": "http://i.imgur.com/FkoAc5n.png"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "readme": "[![typpy](http://i.imgur.com/FkoAc5n.png)](#)\n\n# typpy [![PayPal](https://img.shields.io/badge/%24-paypal-f39c12.svg)][paypal-donations] [![Travis](https://img.shields.io/travis/IonicaBizau/typpy.js.svg)](https://travis-ci.org/IonicaBizau/typpy.js/) [![Version](https://img.shields.io/npm/v/typpy.svg)](https://www.npmjs.com/package/typpy) [![Downloads](https://img.shields.io/npm/dt/typpy.svg)](https://www.npmjs.com/package/typpy) [![Get help on Codementor](https://cdn.codementor.io/badges/get_help_github.svg)](https://www.codementor.io/johnnyb?utm_source=github&utm_medium=button&utm_term=johnnyb&utm_campaign=github)\n\n> A better typeof for JavaScript.\n\n## Installation\n\n```sh\n$ npm i --save typpy\n```\n\n## Example\n\n```js\n// Dependencies\nvar Typpy = require(\"typpy\");\n\nconsole.log(Typpy(0));\n// => \"number\"\n\nconsole.log(Typpy(\"\", String));\n// => true\n\nconsole.log(Typpy.is(null, \"null\"));\n// => true\n\nconsole.log(Typpy.get([]));\n// => Array\n\nconsole.log(Typpy({}, true));\n// => \"object\"\n\nconsole.log(Typpy({}, Object));\n// => true\n```\n\n## Documentation\n\n### `Typpy(input, target)`\nGets the type of the input value or compares it\nwith a provided type.\n\nUsage:\n\n```js\nTyppy({}) // => \"object\"\nTyppy(42, Number); // => true\nTyppy.get([], \"array\"); => true\n```\n\n#### Params\n- **Anything** `input`: The input value.\n- **Constructor|String** `target`: The target type. It could be a string (e.g. `\"array\"`) or a\nconstructor (e.g. `Array`).\n\n#### Return\n- **String|Boolean** It returns `true` if the input has the provided type `target` (if was provided),\n`false` if the input type does *not* have the provided type\n`target` or the stringified type of the input (always lowercase).\n\n### `Typpy.is(input, target)`\nChecks if the input value has a specified type.\n\n#### Params\n- **Anything** `input`: The input value.\n- **Constructor|String** `target`: The target type. It could be a string (e.g. `\"array\"`) or a\nconstructor (e.g. `Array`).\n\n#### Return\n- **Boolean** `true`, if the input has the same type with the target or `false` otherwise.\n\n### `Typpy.get(input, str)`\nGets the type of the input value. This is used internally.\n\n#### Params\n- **Anything** `input`: The input value.\n- **Boolean** `str`: A flag to indicate if the return value should be a string or not.\n\n#### Return\n- **Constructor|String** The input value constructor (if any) or the stringified type (always lowercase).\n\n## How to contribute\nHave an idea? Found a bug? See [how to contribute][contributing].\n\n## Where is this library used?\nIf you are using this library in one of your projects, add it in this list. :sparkles:\n\n - [`blah`](https://github.com/IonicaBizau/blah)\n\n - [`bug-killer`](https://github.com/IonicaBizau/node-bug-killer)\n\n - [`cli-gh-cal`](https://github.com/IonicaBizau/cli-gh-cal)\n\n - [`couleurs`](https://github.com/IonicaBizau/node-couleurs)\n\n - [`deffy`](https://github.com/IonicaBizau/deffy.js)\n\n - [`diable`](https://github.com/IonicaBizau/diable)\n\n - [`elm-select`](https://github.com/IonicaBizau/elm-select)\n\n - [`engine-flow-types`](https://github.com/jillix/engine-flow-types#readme) by jillix\n\n - [`engine-parser`](https://github.com/IonicaBizau/engine-parser) by jillix\n\n - [`enny`](https://github.com/IonicaBizau/enny) by jillix\n\n - [`err`](https://github.com/IonicaBizau/err#readme)\n\n - [`exec-limiter`](https://github.com/IonicaBizau/node-exec-limiter)\n\n - [`ghcal`](https://github.com/IonicaBizau/ghcal)\n\n - [`ghosty`](https://github.com/IonicaBizau/ghosty#readme)\n\n - [`git-stats`](https://github.com/IonicaBizau/git-stats)\n\n - [`git-stats-importer`](https://github.com/IonicaBizau/git-stats-importer)\n\n - [`limit-it`](https://github.com/IonicaBizau/node-limit-it)\n\n - [`ul`](https://github.com/IonicaBizau/node-ul)\n\n## License\n\n[MIT][license] © [Ionică Bizău][website]\n\n[paypal-donations]: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=RVXDDLKKLQRJW\n[donate-now]: http://i.imgur.com/6cMbHOC.png\n\n[license]: http://showalicense.com/?fullname=Ionic%C4%83%20Biz%C4%83u%20%3Cbizauionica%40gmail.com%3E%20(http%3A%2F%2Fionicabizau.net)&year=2015#license-mit\n[website]: http://ionicabizau.net\n[contributing]: /CONTRIBUTING.md\n[docs]: /DOCUMENTATION.md",
  "readmeFilename": "README.md",
  "_id": "typpy@2.3.1",
  "dist": {
    "shasum": "8f94bd757d9ba030c3a4b1c3ef0d63581c0e531b"
  },
  "_from": "typpy@^2.1.0",
  "_resolved": "https://registry.npmjs.org/typpy/-/typpy-2.3.1.tgz"
}
